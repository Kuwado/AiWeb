{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\AiWeb\\\\frontend\\\\src\\\\pages\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport ChatbotResponse from \"./ChatbotResponse\";\nimport \"./Chatbot.css\";\nimport UserMessage from \"./UserMessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  console.log(messages);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await axios.post(\"http://localhost:5000/chatbot\", {\n        message: input\n      });\n      const botMessage = {\n        role: \"bot\",\n        content: response.data.response || \"Không có phản hồi.\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"API Error:\", error);\n    }\n    setInput(\"\");\n  };\n  const formatText = text => {\n    return marked(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-body\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Xin ch\\xE0o b\\u1EA1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), messages.length > 0 && messages.map((message, index) => {\n        return message.role === \"user\" ? /*#__PURE__*/_jsxDEV(UserMessage, {\n          message: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ChatbotResponse, {\n          message: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: formatText(message.content)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        id: \"question\",\n        placeholder: \"B\\u1EA1n mu\\u1ED1n h\\u1ECFi g\\xEC?\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"send-btn\",\n        onClick: handleSend,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["useState","axios","ChatbotResponse","UserMessage","FontAwesomeIcon","faArrowUp","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","console","log","handleSend","trim","userMessage","role","content","prev","response","post","message","botMessage","data","error","formatText","text","marked","className","children","length","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","index","dangerouslySetInnerHTML","__html","type","name","id","placeholder","value","onChange","e","target","onKeyDown","key","onClick","icon","_c","$RefreshReg$"],"sources":["E:/Code/AiWeb/frontend/src/pages/Chatbot/Chatbot.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport ChatbotResponse from \"./ChatbotResponse\";\r\nimport \"./Chatbot.css\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  console.log(messages);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { role: \"user\", content: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/chatbot\", {\r\n        message: input,\r\n      });\r\n\r\n      const botMessage = {\r\n        role: \"bot\",\r\n        content: response.data.response || \"Không có phản hồi.\",\r\n      };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"API Error:\", error);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const formatText = (text) => {\r\n    return marked(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"box-body\">\r\n        {messages.length === 0 && (\r\n          <h2 style={{ textAlign: \"center\" }}>Xin chào bạn</h2>\r\n        )}\r\n\r\n        {messages.length > 0 &&\r\n          messages.map((message, index) => {\r\n            return message.role === \"user\" ? (\r\n              <UserMessage key={index} message={message.content} />\r\n            ) : (\r\n              <ChatbotResponse\r\n                key={index}\r\n                message={\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: formatText(message.content),\r\n                    }}\r\n                  />\r\n                }\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      <div className=\"box-input\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"question\"\r\n          id=\"question\"\r\n          placeholder=\"Bạn muốn hỏi gì?\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n        />\r\n        <button type=\"button\" className=\"send-btn\" onClick={handleSend}>\r\n          <FontAwesomeIcon icon={faArrowUp} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}